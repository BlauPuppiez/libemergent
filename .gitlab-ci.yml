stages:
  - build
  - deploy

build-check:
  stage: build
  only: [ master ]
  script:
    - earthly +build

package-all:
  stage: build
  only: [ tags ]
  script:
    - earthly +package
  artifacts:
    - libemergent-dev_*.deb

deploy-packages:
  stage: deploy
  when: on_success
  only: [ tags ]
  dependencies: [ package-all ]
  before_script:
    - eval $(ssh-agent -s)
    - echo "$SSH_PRIVATE_KEY" | tr -d '\r' | ssh-add - > /dev/null
    - mkdir -p ~/.ssh
    - chmod 700 ~/.ssh
    - echo "$SSH_KNOWN_HOSTS" > ~/.ssh/known_hosts
    - chmod 644 ~/.ssh/known_hosts
  script:
    - scp libemergent-dev_*.deb gitlab@downloads.emergent-design.co.uk:/srv/downloads/libemergent/

# build-check:
#   image: emergent:bionic
#   stage: build
#   only:
#     - master
#   script:
#     - premake5 gmake
#     - make -j4

# # Header-only library so package is the same for each distribution
# package-all:
#   image: emergent:bionic
#   stage: build
#   only:
#     - tags
#   script:
#     - cd packages
#     - ./build
#     - mkdir -p /packages/xenial/oss/
#     - mkdir -p /packages/bionic/oss/
#     - mkdir -p /packages/focal/oss/
#     - cp libemergent-dev_*.deb /packages/xenial/oss/libemergent-dev.deb
#     - cp libemergent-dev_*.deb /packages/bionic/oss/libemergent-dev.deb
#     - cp libemergent-dev_*.deb /packages/focal/oss/libemergent-dev.deb
#   artifacts:
#     paths:
#       - packages/*.deb

# deploy-packages:
#   image: emergent:deploy
#   stage: deploy
#   when: on_success
#   only:
#     - tags
#   dependencies:
#     - package-all
#   before_script:
#     - eval $(ssh-agent -s)
#     - echo "$SSH_PRIVATE_KEY" | tr -d '\r' | ssh-add - > /dev/null
#     - mkdir -p ~/.ssh
#     - chmod 700 ~/.ssh
#     - echo "$SSH_KNOWN_HOSTS" > ~/.ssh/known_hosts
#     - chmod 644 ~/.ssh/known_hosts
#   script:
#     - cd packages
#     - scp *.deb gitlab@downloads.emergent-design.co.uk:/srv/downloads/libemergent/
